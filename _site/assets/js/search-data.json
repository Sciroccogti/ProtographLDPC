{"0": {
    "doc": "LDPC codes",
    "title": "LDPC codes",
    "content": " ",
    "url": "http://localhost:4000/background-ldpc.html",
    "relUrl": "/background-ldpc.html"
  },"1": {
    "doc": "Linear codes",
    "title": "Linear codes",
    "content": "linear codes background - parity check and generator matrices, puncturing, include any additional details as needed. ",
    "url": "http://localhost:4000/background-linear.html",
    "relUrl": "/background-linear.html"
  },"2": {
    "doc": "Background",
    "title": "Background",
    "content": "We provide here a very brief background on error correction codes, specifically linear codes and LDPC codes (regular and protograph). For a more detailed introduction, please see one of the following great resources: . include papers, books, youtube videos . ",
    "url": "http://localhost:4000/background.html",
    "relUrl": "/background.html"
  },"3": {
    "doc": "Examples",
    "title": "Examples",
    "content": " ",
    "url": "http://localhost:4000/examples.html",
    "relUrl": "/examples.html"
  },"4": {
    "doc": "Future Work",
    "title": "Future Work",
    "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. ",
    "url": "http://localhost:4000/future_work.html",
    "relUrl": "/future_work.html"
  },"5": {
    "doc": "Home",
    "title": "Citation",
    "content": "TODO: add Zenodo indexing here, along with citation style with authors etc. ",
    "url": "http://localhost:4000/#citation",
    "relUrl": "/#citation"
  },"6": {
    "doc": "Home",
    "title": "Home",
    "content": "THIS IS UNDER CONSTRUCTION. PLEASE CHECK AGAIN SOON FOR A RELEASE . Test image . Brief introduction of library here. ",
    "url": "http://localhost:4000/",
    "relUrl": "/"
  },"7": {
    "doc": "Installation",
    "title": "Installation",
    "content": ". The relevant code is contained at this repository. All provided services require python 3.x . Do a recursive download . git clone --recursive https://github.com/shubhamchandak94/ProtographLDPC . To update the contained submodule, run . git pull --recurse-submodules git submodule update --init --recursive . After cloning, install the LDPC-codes submodule . cd LDPC-codes/ make cd .. ",
    "url": "http://localhost:4000/installation.html",
    "relUrl": "/installation.html"
  },"8": {
    "doc": "Library organization",
    "title": "Library organization",
    "content": "describe how library is structured . ",
    "url": "http://localhost:4000/methods-library.html",
    "relUrl": "/methods-library.html"
  },"9": {
    "doc": "Parity check construction - protograph",
    "title": "Parity check construction - protograph",
    "content": "include puncturing in this . ",
    "url": "http://localhost:4000/methods-protograph.html",
    "relUrl": "/methods-protograph.html"
  },"10": {
    "doc": "Parity check construction - regular",
    "title": "Parity check construction - regular",
    "content": " ",
    "url": "http://localhost:4000/methods-regular.html",
    "relUrl": "/methods-regular.html"
  },"11": {
    "doc": "Sample protographs",
    "title": "Sample protographs",
    "content": "Put in several example protographs here with their matrices and figures . ",
    "url": "http://localhost:4000/methods-sample-protographs.html",
    "relUrl": "/methods-sample-protographs.html"
  },"12": {
    "doc": "Methods",
    "title": "Methods",
    "content": "Brief outline of our contributions. Main content is in children pages. ",
    "url": "http://localhost:4000/methods.html",
    "relUrl": "/methods.html"
  },"13": {
    "doc": "Overview",
    "title": "Overview",
    "content": " ",
    "url": "http://localhost:4000/overview.html",
    "relUrl": "/overview.html"
  },"14": {
    "doc": "References",
    "title": "References",
    "content": "Here are some papers and other resources that were helpful for understanding protograph LDPC codes and implementing this library. | ABCD | EFGH | . ",
    "url": "http://localhost:4000/references.html",
    "relUrl": "/references.html"
  },"15": {
    "doc": "Simulations",
    "title": "Simulations",
    "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. ",
    "url": "http://localhost:4000/simulations.html",
    "relUrl": "/simulations.html"
  },"16": {
    "doc": "Usage",
    "title": "Library Usage",
    "content": ". The following scripts are included . | make-pchk | encode | decode | . The encoding script requires prequisite calls to the base library’s programs. For reference purposes, you can find the documentation for that library here. ",
    "url": "http://localhost:4000/usage.html#library-usage",
    "relUrl": "/usage.html#library-usage"
  },"17": {
    "doc": "Usage",
    "title": "make-pchk",
    "content": "Creates a regular or protograph parity check matrix . python3 make-pchk.py pchk-file code-type construction build-params . build params: if code-type == regular: build-params: width, height, column-weight if code-type == protograph: build-params: protograph-file, expansion-factor . | code-type | construction options | . | regular | . | gallager | random | populate-rows | populate-columns | . | . | protograph | . | permutation | regular | quasi-cyclic | permuted-quasi-cyclic | . | . Generates a parity check code of the following format . pchk-file |_ pchk-file |_ .transmitted . | the pchk file contains the machine-readable fully constructed LDPC code | . the .transmitted file contains the following information . factor: expansion-factor total bits before transmission: code-width [space separated list of transmitted bit indices] . If you wish to include puncturing for a regular code, you must edit the .transmitted file to include the necessary information in the above format. Specifically, remove the indices you wish to puncture in transmission from the index list. ",
    "url": "http://localhost:4000/usage.html#make-pchk",
    "relUrl": "/usage.html#make-pchk"
  },"18": {
    "doc": "Usage",
    "title": "encode",
    "content": "Encodes a message provided a parity check code . python3 encode.py pchk-file gen-file source-file encoded-path . This script implements a wrapper of the base-library’s encode program which requires the construction of a generator matrix before encoding. To achieve this, run ../LDPC-codes/make-gen pchk-file gen-file method . method: - sparse - dense - mixed . where pchk-file is the parity check file generated, NOT THE PARITY CHECK DIRECTORY . gen-file is the filepath of the output generator matrix file. method is the encoding schema for the generator matrix file. In the context of the python encode script: . | pchk-file refers to the pchk-directory created by the make-pchk program, not any of the files contained within. | gen-file refers to the path of the generator matrix file corresponding to the specified parity check code. | source-file refers to the filepath of the message to be encoded as a string of 1s and 0s. | encoded-path refers to the path of the encoded message. | . the encoded message is in the following format . encoded-file |_ encoded-file |_ .preserved . The .preserved file contains the message encoding as it would appear before puncturing, separated by newline characters. The contained encoded-file contains the encoded codewords after puncturing, separated by newline characters. ",
    "url": "http://localhost:4000/usage.html#encode",
    "relUrl": "/usage.html#encode"
  },"19": {
    "doc": "Usage",
    "title": "Decode",
    "content": "Decodes a given message according to the following . python3 decode.py received-file channel-params decode-iterations decoded-file pchk-file . | received-file is the file produced as a result of the encoding, after undergoing some corruption (the base library provides a transmit function which induces corruption) | channel-params can be one of the following three bsc error-probabilioty [0, 1) awgn standard-deviation misc 0.0 . This selection is made based on the type of corruption associated with the selected transmission channel . | decode-iterations dictates the number of decoding iterations used in decoding. The decode script implements a wrapper of the decode function of the base library, and the prprp is directly passed as an argument to the base decode program. | decoded-file is the filepath of the output of the decoding. Each decoded message is separated by a newline character | . ",
    "url": "http://localhost:4000/usage.html#decode",
    "relUrl": "/usage.html#decode"
  },"20": {
    "doc": "Usage",
    "title": "Usage",
    "content": " ",
    "url": "http://localhost:4000/usage.html",
    "relUrl": "/usage.html"
  }
}
