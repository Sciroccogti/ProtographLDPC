I"ï<h2 id="ldpc-codes">LDPC Codes</h2>
<h3 id="background">Background</h3>
<p>LDPC codesâ€“(L)ow (D)ensity (P)arity (C)heck Codesâ€“are codes which are defined by particularly sparse parity check matrices. The quality of being sparse is defined by an absurdly small ratio of 1s to 0s, as well as a large distribution uniformity of  1s within the parity check matrix. Unlike other types of linear codes, LDPC codes are not restricted in their hamming distance by larger code rates (code rate being the ratio of message length to encoded codeword length).</p>

<h3 id="representation">Representation</h3>
<p>All linear codes can be represented in a variety of ways. Thought operations are performed on the matrix level, linear codes can also be represented by gaphs, among the most prevalant of which is the Tanner (Bi-partite) graph.</p>

<p>This graph represents codes as follows:
given a layer of nodes representing the parity check equations and a layer of nodes representing the indices in the codeword, connections are made between parity-check node and codeword-index node if the parity-check equation includes the code-word index in its summation.</p>

<p>For example, consider the following code in both its matrix form and bipartite graph form:
<img src="./figures/example_code.png" alt="example code" /></p>

<p><strong>num message bits:</strong> 4 <br />
<strong>num parity check bits:</strong> 4 <br />
<strong>rate:</strong> 1/2 <br /></p>

<p>Each of the four parity check nodes (a.k.a. check nodes) in the tanner graph maps to multiple codeword nodes (a.k.a. variable nodes). The connected variable nodes for each check node are represented by the location of 1s in the corresponding row of the matrix form.</p>

<h3 id="ldpc-code-classification">LDPC Code Classification</h3>
<p>LDPC codes can be further classified according to their characteristics and constructions.</p>

<p>The three most relevant to this library are:</p>
<ul>
  <li>Regular codes</li>
  <li>Irregular codes</li>
  <li>Protograph codes</li>
</ul>

:ET